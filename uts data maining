{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2327a957-a0fe-4ae8-b7c4-0ee9f165e6e8",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "# Load the dataset\n",
    "data_startup = pd.read_csv('50_Startups.csv')\n",
    "\n",
    "# Step 1: Analyze fields for missing data and fill with mean\n",
    "# Check for missing values\n",
    "missing_data = data_startup.isnull().sum()\n",
    "print(\"Missing data in each field before filling:\\n\", missing_data)\n",
    "\n",
    "# Fill missing values with mean of each column\n",
    "data_startup.fillna(data_startup.mean(), inplace=True)\n",
    "\n",
    "# Verify missing values are filled\n",
    "missing_data_after_filling = data_startup.isnull().sum()\n",
    "print(\"Missing data in each field after filling:\\n\", missing_data_after_filling)\n",
    "\n",
    "# Step 2: Perform one-hot encoding on the 'State' field\n",
    "data_startup = pd.get_dummies(data_startup, columns=['State'])\n",
    "\n",
    "# Step 3: Create a new 'Tax' field\n",
    "data_startup['Tax'] = (data_startup['Profit'] + data_startup['Marketing Spend'] + data_startup['Administration']) * 0.05\n",
    "\n",
    "# Step 4: Apply standard scaling to the specified fields\n",
    "scaler = StandardScaler()\n",
    "fields_to_scale = ['R&D Spend', 'Administration', 'Marketing Spend', 'Profit', 'Tax']\n",
    "\n",
    "data_startup[fields_to_scale] = scaler.fit_transform(data_startup[fields_to_scale])\n",
    "\n",
    "# Display the first few rows of the processed data\n",
    "print(data_startup.head())\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
